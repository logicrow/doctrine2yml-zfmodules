<?php

namespace Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntityUserProxy extends \Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function setIpAddress($ipAddress)
    {
        $this->_load();
        return parent::setIpAddress($ipAddress);
    }

    public function getIpAddress()
    {
        $this->_load();
        return parent::getIpAddress();
    }

    public function setEmail($email)
    {
        $this->_load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->_load();
        return parent::getEmail();
    }

    public function setPassword($password)
    {
        $this->_load();
        return parent::setPassword($password);
    }

    public function getPassword()
    {
        $this->_load();
        return parent::getPassword();
    }

    public function setActivationCode($activationCode)
    {
        $this->_load();
        return parent::setActivationCode($activationCode);
    }

    public function getActivationCode()
    {
        $this->_load();
        return parent::getActivationCode();
    }

    public function setForgottenPasswordCode($forgottenPasswordCode)
    {
        $this->_load();
        return parent::setForgottenPasswordCode($forgottenPasswordCode);
    }

    public function getForgottenPasswordCode()
    {
        $this->_load();
        return parent::getForgottenPasswordCode();
    }

    public function setStatus($status)
    {
        $this->_load();
        return parent::setStatus($status);
    }

    public function getStatus()
    {
        $this->_load();
        return parent::getStatus();
    }

    public function setCreatedAt($createdAt)
    {
        $this->_load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->_load();
        return parent::getCreatedAt();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->_load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->_load();
        return parent::getUpdatedAt();
    }

    public function preCreate()
    {
        $this->_load();
        return parent::preCreate();
    }

    public function preUpdate()
    {
        $this->_load();
        return parent::preUpdate();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'ipAddress', 'email', 'password', 'activationCode', 'forgottenPasswordCode', 'status', 'createdAt', 'updatedAt');
    }
}